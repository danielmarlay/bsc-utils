%!PS-Adobe-2.0
%%Creator: Daniel Marlay
%%Title: Mark laying helper
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 20 25 558 775
%%EndComments

%!
% Printable E6-B Flight Computer
% by Ben Jackson <ben@ben.com>
% http://www.ben.com/
% Last update: Thu Nov  1 09:09:15 PST 2001
%
% This file may be distributed freely as long as this header and the
% printed attribution remain intact.
%
% Tiny update:  added min/max functions because they are only native to
% ghostscript (oops)
%
% Change Log by Wee-Meng LEE Sep 2005
% Added drawing for circular hinge design
% Rotated the unit multiplier so that "OIL LBS" didn't block 10.
% Repositioned inner/outer rings to fit A4 and Letter page size.

/debug false def
/radius 1.875 72 mul def		% radius of 1.875 inches
/numfontsize 11 def			% fontsize 11pt for numbers
/minifontsize numfontsize 2 div def	% half that for letting
/bigdashsize 9 def			% big dashes are 9pt (9/72")
/DAOffsetPos 13.5 log 1.0 sub 360 mul neg def % Offset position in degrees anti-clockwise rotation from 12 0'clock for the 0ft Density Altitude setting in the DA window
/DArfrac 0.7 def		% Fraction of the radius to position the Density Alt window
/OATrfrac 0.55 def		% Fraction of the radius to position the OAT window

/numfont /Helvetica findfont numfontsize scalefont def
/minifont /Helvetica findfont minifontsize scalefont def
/microfont /Helvetica findfont minifontsize 0.75 mul scalefont def

0 setlinejoin
2 setlinecap

/max { 2 copy lt { exch } if pop } def
/min { 2 copy gt { exch } if pop } def

/logrotate {
	log 1.0 sub 360 mul neg rotate
} def

/labelconv {	% baseangle factor label
	gsave
	/s exch def
	log 360 mul add neg /angle exch def
	angle rotate

	minifont setfont
	s stringwidth pop 2 div neg 
	inside
		{ radius bigdashsize 2 sub sub numfontsize sub minifontsize sub}
		{ radius bigdashsize add numfontsize add 2 sub }
	ifelse
	moveto
	s show

	0.5 setlinewidth
	newpath
		0 inside
			{ radius bigdashsize 2 div sub 2 sub }
			{ radius bigdashsize 2 div add 2 add }
		ifelse moveto
		-1 4 inside { neg } if rlineto
		2 0 rlineto
		-1 -4 inside { neg } if rlineto
		0 numfontsize 1 sub inside { neg } if rlineto
	stroke
	grestore
} def


/drawdash {
	gsave
	v logrotate
	newpath
		0 radius moveto
		0 bigdashsize bigdash not { 2 div } if  inside { neg } if rlineto
	stroke
	shownum {
		numfont setfont
		/tmp v 5 string cvs def
		tmp stringwidth pop 2 div neg
		inside
			{ radius bigdashsize 2 sub sub numfontsize sub }
			{ radius bigdashsize add }
		ifelse
		moveto
		tmp show
	} if
	grestore
} def


% Function to draw a dash somewhere within the radius
% Expects the following on the stack in this order
%  - angular position (clockwise in degrees from 10 mark)
%  - fraction of the radius to draw the tick
%  - number to label the tick with
%  - inside boolean defining whether the mark is inside or outside the radius
%  - shownum boolean defining whether the number label should be shown

/drawsubdash {
	/shownum exch def
	/inside exch def
	/nlab exch def
	/rfrac exch def
	/angpos exch def

	gsave
	angpos neg rotate
	newpath
		0 radius rfrac mul moveto
		0 bigdashsize bigdash not { 2 sqrt div } if shownum not {2 sqrt div} if inside { neg } if rlineto
	stroke
	shownum {
		microfont setfont
		/tmp nlab 5 string cvs def
		tmp stringwidth pop 2 div neg
		inside
			{ radius rfrac mul bigdashsize 2 sub sub numfontsize sub }
			{ radius rfrac mul bigdashsize add }
		ifelse
		moveto
		tmp show
	} if
	grestore
} def


/ring { 
	newpath 0 0 moveto 0 0 1.5 0 360 arc fill
	5 5 360 {
		/n exch def
		/shownum n 10 mod 0 eq def
		/bigdash n 10 mod 0 eq def

		gsave
		n neg rotate
		newpath
		0 radius moveto
		0 bigdashsize bigdash not { 2 div } if rlineto
		stroke
		shownum {
			numfont setfont
			/tmp n 5 string cvs def
			tmp stringwidth pop 2 div neg
			inside
				{ radius bigdashsize 2 sub sub numfontsize sub }
				{ radius bigdashsize add }
			ifelse
			moveto
			tmp show
		} if
		grestore
	} for
} def


/corporate-branding {
	gsave
	minifont setfont
	[ (        Continuum BoP Cheat Sheet         )
	  ( Align "Density Alt" to alt in '000 feet  )
	  (  Read KEAS on inner and TAS outer scale  )
	  (  Align OAT ptr => TAS outer, Mach inner  )
      (Notation      Inner:Outer  Inner  => Outer)
	  (Calculate Q      30:KEAS    KEAS  => Q    )
	  (Lift to G        WL:Q       Lift <=> G    )
	  (Calculate R     TAS:G         10  => R    )
	  (Calculate TP     36:R      Ticks <=> TP   )
	  (Calculate WL Ref-WL:Ref-Wgt   WL <=  Wgt  )
	  (Calculate Thrust WL:Engine    35  => Thrust)
	  (Calculate Form D WL:Q  Form Drag  => D    )
	  (       D:34       1.0  => Form Delta Speed)
	] {
		dup stringwidth pop 2 div neg 0 moveto show
		0 minifontsize neg translate
	} forall
	grestore
} def


/degscale 1.5 def
/degbigdashsize bigdashsize 0.60 mul def


/insidering {
	gsave
	0 0 radius 1 add 0 360 arc stroke % draw template outline
	% 0 0 radius 5 div 0 360 arc stroke  % inner circle
	0 0 1.5 0 360 arc fill % pin hole position
	grestore

	% Draw the figure eight course
	gsave
	/coursescale 0.6 def
	0 0 moveto % Start at the origin
	% Mark 1 - windward mark
	radius coursescale mul 0 sin mul %x
	radius coursescale mul 0 cos mul %y
	lineto
	% Mark 2 - first wing mark
	radius coursescale mul 300 sin mul %x
	radius coursescale mul 300 cos mul %y
	lineto
	% Mark 3 - second wing mark
	radius coursescale mul 120 sin mul %x
	radius coursescale mul 120 cos mul %y
	lineto
	% Mark 4 - leeward mark
	radius coursescale mul 180 sin mul %x
	radius coursescale mul 180 cos mul %y
	lineto
	% back to centre
	0 0 lineto
	stroke
	grestore

	% Add the mark labels
	numfont setfont
	% Mark 1
	gsave
	0 rotate
	/tmp (Mark 1) def
	tmp stringwidth pop 2 div neg
	radius coursescale mul numfontsize add
	moveto
	tmp show
	0 radius coursescale mul numfontsize 2 mul add moveto
	[1 5] 0 setdash
	0 radius 1 add lineto
	stroke
	grestore
	% Mark 2
	gsave
	300 neg rotate
	/tmp (Mark 2) def
	tmp stringwidth pop 2 div neg
	radius coursescale mul numfontsize add
	moveto
	tmp show
	0 radius coursescale mul numfontsize 2 mul add moveto
	[1 5] 0 setdash
	0 radius 1 add lineto
	stroke
	grestore
	% Mark 3
	gsave
	120 neg rotate
	/tmp (Mark 3) def
	tmp stringwidth pop 2 div neg
	radius coursescale mul numfontsize add
	moveto
	tmp show
	0 radius coursescale mul numfontsize 2 mul add moveto
	[1 5] 0 setdash
	0 radius 1 add lineto
	stroke
	grestore
	% Mark 4
	gsave
	180 neg rotate
	/tmp (Mark 4) def
	tmp stringwidth pop 2 div neg
	radius coursescale mul numfontsize add
	moveto
	tmp show
	0 radius coursescale mul numfontsize 2 mul add moveto
	[1 5] 0 setdash
	0 radius 1 add lineto
	stroke
	grestore

	% Add the final alignment lines / indexer
	gsave
	60 neg rotate
	0 radius 1 add neg moveto
	[1 5] 0 setdash
	0 radius 1 add lineto
	stroke
	grestore


	%/inside true def
	%ring

	% Code below draws the dashed cutting template for origami hinge
	%gsave
	%[1 5] 0 setdash
	%0 0 radius 5 div 0 360 arc stroke % draw template outline
	%grestore
    %  0 30 360 { % Go from 0 to 360 degrees in 30 degree steps 
	%	newpath % Start a new path 
	%	gsave % Keep rotations temporary 
	%	0 0 moveto 
	%	rotate % Rotate by degrees on stack from 'for' 
	%	radius 5 div 0 rlineto stroke 
	%	grestore % Get back the unrotated state 
	%} for % Iterate over angles 
} def

/outsidering {
	/inside false def
	ring

	0 0 radius 28 add 0 360 arc stroke % outer circle
	%0 0 radius 5 div 0 360 arc stroke  % inner circle
} def

/half {
	gsave
	
	radius 15 add radius 2.5 mul 20 sub translate
	insidering

	radius 2 mul -5 add  -140 translate
	outsidering

	0 radius 1.63 mul sub 0 radius 0.4 mul sub translate
	0 0 radius 2.2 div 0 360 arc stroke 
	grestore

	gsave
	radius 3 div radius 1.3 div translate
	minifont setfont
	[ (printable E6-B by Ben Jackson)
	  (www.ben.com)
	  (Circular paper hinge design by)
	  (leewm@starhub.net.sg)
	  (Adaptation for BoP by Daniel Marlay)
	  (deemar@gmail.com)
	  (Instructions)
	  (o Cut along solid lines, fold along dotted lines)
	  (o On inside disc, fold star flaps down)
	  (o Place inside disc and outside disc together)
	  (o Push star flaps of inside disc, through centre of outside disc)
	  (o Fold flaps all the way backwards and flatten (these flaps holds the 2 discs together))
	  (o Turn over, put a TINY drop of glue on each flap)
	  (o Position small circle over flaps and press down)
	  (o Rotate the inner ring a few times in case glue oozes out and glues the two discs together)
	] {
		%dup stringwidth pop 2 div neg 0 moveto show
		0 0 moveto show
		0 minifontsize neg translate
	} forall
	grestore


} def




%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

% assume 8.5x11 page, squeeze two sets in
half
8.5 72 mul -20 add 11 72 mul 2 add translate 180 rotate
half
showpage


%%Page: 2 2
% print two separate pages with each ring as large as possible
gsave
currentpagedevice /PageSize get aload pop
2 copy 2 div exch 2 div exch translate % center
min 36 sub 2 div % space we want to fill
radius bigdashsize numfontsize minifontsize add add add % space we use
div dup scale  % fill page
gsave
insidering
showpage

%%Page: 3 3
grestore
outsidering
showpage
grestore

%%Trailer
%%EOF